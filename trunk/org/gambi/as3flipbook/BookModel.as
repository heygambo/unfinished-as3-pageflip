package org.gambi.as3flipbook{	public class BookModel	{		private var _sheets:Array = new Array();			private var _currentSheetIndex:int = 0;				public function BookModel():void		{			// nothing		}				public function addSheet( sheet:SheetController ):void		{			_sheets.push( sheet );		}				public function skimTo( sheet:int ):Boolean		{			if (_sheets[sheet-1])			{				_currentSheetIndex = sheet;				return true;			}			return false;		}				public function skimToNext():Boolean		{			if ( (_currentSheetIndex + 1) <= _sheets.length)			{				_currentSheetIndex++;				return true;			}			return false;		}				public function skimToPrev():Boolean		{			if ( (_currentSheetIndex - 1) >= 0)			{				_currentSheetIndex--;				return true;			}			return false;		}				public function get currentSheetIndex():int		{			return _currentSheetIndex;		}				public function get currentLeftSheet():SheetController		{			if (_sheets[_currentSheetIndex-1] != null)			{				//trace("currentLeftsheet: " + (_sheets[_currentSheetIndex-1] as SheetController).sheetIndex);				return _sheets[_currentSheetIndex-1];			}			return null;		}				public function get currentRightSheet():SheetController		{			if (_sheets[_currentSheetIndex] != null)			{				//trace("currentRightSheet: " + (_sheets[_currentSheetIndex] as SheetController).sheetIndex);				return _sheets[_currentSheetIndex];			}			return null;		}				public function get previousSheet():SheetController		{			if (_sheets[_currentSheetIndex-2] != null)			{				//trace("previousSheet: " + (_sheets[_currentSheetIndex-2] as SheetController).sheetIndex);				return _sheets[_currentSheetIndex-2];			}			return null;		}				public function get nextSheet():SheetController		{			if (_sheets[_currentSheetIndex+1] != null)			{				//trace("nextSheet: " + (_sheets[_currentSheetIndex+1] as SheetController).sheetIndex);				return _sheets[_currentSheetIndex+1];			}							return null;		}				public function get sheets():Array		{			return _sheets;		}	}}